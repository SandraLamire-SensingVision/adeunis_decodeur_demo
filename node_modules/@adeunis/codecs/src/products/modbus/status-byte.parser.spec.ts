/// <reference path='status-byte.parser.ts' />

import { expect } from 'chai';
import 'mocha';

describe('ModbusStatusByteParser', () => {
  let parser: codec.ModbusStatusByteParser;

  beforeEach(() => {
    parser = new codec.ModbusStatusByteParser();
  });

  it('should parse 208d0501', () => {
    const payloadString = '208d0501';
    const content = parser.parseFrame(Buffer.from(payloadString, 'hex'), Buffer.from(''));

    expect(content['status']['frameCounter']).to.equal(4);
    expect(content['status']['hardwareError']).to.equal(true);
    expect(content['status']['lowBattery']).to.equal(false);
    expect(content['status']['configurationDone']).to.equal(true);
    expect(content['status']['configurationInconsistency']).to.equal(true);
    expect(content['status']['modbusReadError']).to.equal(false);
  });

  it('should parse 20510501', () => {
    const payloadString = '20510501';
    const content = parser.parseFrame(Buffer.from(payloadString, 'hex'), Buffer.from(''));

    expect(content['status']['frameCounter']).to.equal(2);
    expect(content['status']['hardwareError']).to.equal(false);
    expect(content['status']['lowBattery']).to.equal(false);
    expect(content['status']['configurationDone']).to.equal(true);
    expect(content['status']['configurationInconsistency']).to.equal(false);
    expect(content['status']['modbusReadError']).to.equal(true);
  });
});
