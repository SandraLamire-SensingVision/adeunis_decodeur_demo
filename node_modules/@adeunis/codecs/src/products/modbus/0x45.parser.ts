namespace codec {
  /**
   * Modbus 0x45 (alarm) frame parser
   */
  export class Modbus0x45Parser implements FrameParser {
    readonly deviceType = 'modbus';
    readonly frameCode = 0x45;

    public parseFrame(payload: Buffer, configuration: Buffer, network: Network) {
      const appContent: Content = { type: '0x45 Modbus alarm' };

      appContent['alarmStatus'] = this.getAlarmStatusText(payload.readUInt8(2));
      appContent['slaveAdress'] = payload.readUInt8(3);
      appContent['registerAddress'] = payload.readUInt16BE(4);
      appContent['registerUint16Value1'] = payload.readUInt16BE(6);
      if (payload.length == 10) {
        appContent['registerUint16Value2'] = payload.readUInt16BE(8);
      }

      return appContent;
    }

    /**
     * Get Alarm status text
     * @param value value
     */
    private getAlarmStatusText(value: number) {
      switch (value) {
        case 1:
          return 'highThreshold';
        case 2:
          return 'lowThreshold';
        default:
          return 'none';
      }
    }
  }
}
