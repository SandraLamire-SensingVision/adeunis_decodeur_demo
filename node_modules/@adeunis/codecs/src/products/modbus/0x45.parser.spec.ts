/// <reference path='0x45.parser.ts' />

import { expect } from 'chai';
import 'mocha';

describe('Modbus0x45Parser', () => {
  let parser: codec.Modbus0x45Parser;

  beforeEach(() => {
    parser = new codec.Modbus0x45Parser();
  });

  it('should parse 450001A000321234', () => {
    const content = parser.parseFrame(Buffer.from('450001A000321234', 'hex'), Buffer.from(''), 'unknown');
    expect(content.type).to.equal('0x45 Modbus alarm');
    expect(content['alarmStatus']).to.equal('highThreshold');
    expect(content['slaveAdress']).to.equal(160);
    expect(content['registerAddress']).to.equal(50);
    expect(content['registerUint16Value1']).to.equal(4660);
  });

  it('should parse 450002A000FF1234FFFF', () => {
    const content = parser.parseFrame(Buffer.from('450002A000FF1234FFFF', 'hex'), Buffer.from(''), 'unknown');
    expect(content.type).to.equal('0x45 Modbus alarm');
    expect(content['alarmStatus']).to.equal('lowThreshold');
    expect(content['slaveAdress']).to.equal(160);
    expect(content['registerAddress']).to.equal(255);
    expect(content['registerUint16Value1']).to.equal(4660);
    expect(content['registerUint16Value2']).to.equal(65535);
  });
});
