/// <reference path='0x30.parser.ts' />

import { expect } from 'chai';
import 'mocha';

describe('TempV40x30Parser', () => {
  let parser: codec.TempV40x30Parser;

  beforeEach(() => {
    parser = new codec.TempV40x30Parser();
  });

  it('should parse 30E201B3', () => {
    const payloadString = '30E201B3';
    const content = parser.parseFrame(Buffer.from(payloadString, 'hex'), Buffer.from(''), 'unknown');
    expect(content.type).to.equal('0x30 Temp 4 keep alive');
    expect(content['temperatures'][0].value).to.equal(43.5);
  });

  it('should parse 301001B301B2', () => {
    const payloadString = '301001B301B2';
    const content = parser.parseFrame(Buffer.from(payloadString, 'hex'), Buffer.from(''), 'unknown');
    expect(content.type).to.equal('0x30 Temp 4 keep alive');
    expect(content['temperatures'][0].value).to.equal(43.5);
    expect(content['temperatures'][1].value).to.equal(43.4);
  });
  it('should parse 303419310A12CA0010000014ABA3E9', () => {
    const payloadString = '303419310A12CA0010000014ABA3E9';
    const content = parser.parseFrame(Buffer.from(payloadString, 'hex'), Buffer.from(''), 'unknown');
    expect(content.type).to.equal('0x30 Temp 4 keep alive');
    expect(content['temperatures'][0].value).to.equal(644.9);
    expect(content['temperatures'][1].value).to.equal(257.8);
    expect(content['timestamp']).to.equal('2120-05-24T13:22:08.000');
  });
});
