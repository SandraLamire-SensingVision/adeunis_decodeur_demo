namespace codec {
  /**
   * Comfort 2 0x4d (alarm) frame parser
   */
  export class Comfort20x4dParser implements FrameParser {
    readonly deviceType = 'comfort2';
    readonly frameCode = 0x4d;

    public parseFrame(payload: Buffer, configuration: Buffer, network: Network) {
      const appContent: Content = { type: '0x4d Comfort 2 alarm' };

      if (payload[1] & 0x04) {
        // retrieval of the frame date timestamp value, then conversion to epoch 2013 (+1356998400), then in second
        const myDate = new Date((payload.readUInt32BE(6) + 1356998400) * 1000);
        // As we do not know if timestamp is locale or UTC , do remove 'UTC' indication
        appContent['timestamp'] = myDate.toJSON().replace('Z', '');
      }
      appContent['alarmTemperature'] = {
        alarmStatus: payload.readUInt8(2) >> 4 ? 'active' : 'inactive',
        temperature: { unit: '\u00B0' + 'C', value: payload.readInt16BE(3) / 10 },
      };

      appContent['alarmHumidity'] = {
        alarmStatus: payload.readUInt8(2) & 1 ? 'active' : 'inactive',
        humidity: { unit: '\u0025', value: payload.readUInt8(5) },
      };

      return appContent;
    }
  }
}
