namespace codec {
  /**
   * Dry Contacts 0x30 (keep alive) frame parser
   */
  export class Drycontacts20x30Parser implements FrameParser {
    readonly deviceType = 'drycontacts2';
    readonly frameCode = 0x30;

    public parseFrame(payload: Buffer, configuration: Buffer, network: Network) {
      const appContent: Content = { type: '0x30 Dry Contacts 2 keep alive' };

      if (payload[1] & 0x04) {
        // retrieval of the frame date timestamp value, then conversion to epoch 2013 (+1356998400), then in second
        const myDate = new Date((payload.readUInt32BE(11) + 1356998400) * 1000);
        // As we do not know if timestamp is locale or UTC , do remove 'UTC' indication
        appContent['timestamp'] = myDate.toJSON().replace('Z', '');
      }

      appContent['channelA'] = { value: payload.readUInt16BE(2), state: Boolean(payload[10] & 0x01) };
      appContent['channelB'] = { value: payload.readUInt16BE(4), state: Boolean(payload[10] & 0x02) };
      appContent['channelC'] = { value: payload.readUInt16BE(6), state: Boolean(payload[10] & 0x04) };
      appContent['channelD'] = { value: payload.readUInt16BE(8), state: Boolean(payload[10] & 0x08) };

      return appContent;
    }
  }
}
