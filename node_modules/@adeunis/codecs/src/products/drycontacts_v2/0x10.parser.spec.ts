/// <reference path='0x10.parser.ts' />

import { expect } from 'chai';
import 'mocha';

describe('Drycontacts20x10Parser', () => {
  let parser: codec.Drycontacts20x10Parser;

  beforeEach(() => {
    parser = new codec.Drycontacts20x10Parser();
  });

  it('should parse 100121C0016843110400', () => {
    const payloadString = '100121C0016843110400';
    const content = parser.parseFrame(Buffer.from(payloadString, 'hex'), Buffer.from(''), 'unknown');
    expect(content.type).to.equal('0x10 Dry Contacts 2 configuration');
    expect(content['keepAlivePeriod'].value).to.equal(86400);
    expect(content['transmitPeriod'].value).to.equal(3600);
    expect(content['channelA'].type).to.equal('input');
    expect(content['channelA'].edge).to.equal('both');
    expect(content['channelA'].debounceDuration.unit).to.equal('ms');
    expect(content['channelA'].debounceDuration.value).to.equal(100);
    expect(content['channelB'].type).to.equal('input');
    expect(content['channelB'].edge).to.equal('high');
    expect(content['channelB'].debounceDuration.unit).to.equal('ms');
    expect(content['channelB'].debounceDuration.value).to.equal(10);
    expect(content['channelC'].type).to.equal('output');
    expect(content['channelD'].type).to.equal('disabled');
  });
});
