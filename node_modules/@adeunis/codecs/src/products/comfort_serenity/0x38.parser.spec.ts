/// <reference path='0x38.parser.ts' />

import { expect } from 'chai';
import 'mocha';

describe('ComfortSerenity0x38Parser', () => {
  let parser: codec.ComfortSerenity0x38Parser;

  beforeEach(() => {
    parser = new codec.ComfortSerenity0x38Parser();
  });
  it('should parse frame and return correct config 1', () => {
    const payloadString = '3801039001F403E8460063';
    const content = parser.parseFrame(Buffer.from(payloadString, 'hex'), Buffer.from(''), 'unknown');
    expect(content.type).to.equal('0x38 Comfort Serenity Daily frame');
    expect(content['icone']).to.equal(3);
    expect(content['qaiRedDuration'].value).to.equal(1440);
    expect(content['temperatureMax'].value).to.equal(50);
    expect(content['co2Max'].value).to.equal(1000);
    expect(content['humidityMax'].value).to.equal(70);
    expect(content['vocMax'].value).to.equal(99);
  });
  it('should parse frame and return correct config 2', () => {
    const payloadString = '3801039001F403E84600630064000A0A006200c50258320033';
    const content = parser.parseFrame(Buffer.from(payloadString, 'hex'), Buffer.from(''), 'unknown');
    expect(content.type).to.equal('0x38 Comfort Serenity Daily frame');
    expect(content['icone']).to.equal(3);
    expect(content['qaiRedDuration'].value).to.equal(1440);
    expect(content['temperatureMax'].value).to.equal(50);
    expect(content['co2Max'].value).to.equal(1000);
    expect(content['humidityMax'].value).to.equal(70);
    expect(content['vocMax'].value).to.equal(99);
    expect(content['temperatureMin'].value).to.equal(10);
    expect(content['co2Min'].value).to.equal(10);
    expect(content['humidityMin'].value).to.equal(10);
    expect(content['vocMin'].value).to.equal(98);
    expect(content['temperatureAverage'].value).to.equal(19.7);
    expect(content['co2Average'].value).to.equal(600);
    expect(content['humidityAverage'].value).to.equal(50);
    expect(content['vocAverage'].value).to.equal(51);
  });
  it('should parse frame and return correct config 3', () => {
    const payloadString = '3884039001F403E84600630064000A0A006200c5025832003314ABA3E9';
    const content = parser.parseFrame(Buffer.from(payloadString, 'hex'), Buffer.from(''), 'unknown');
    expect(content.type).to.equal('0x38 Comfort Serenity Daily frame');
    expect(content['timestamp']).to.equal('2023-12-28T19:22:17.000');
    expect(content['icone']).to.equal(3);
    expect(content['qaiRedDuration'].value).to.equal(1440);
    expect(content['temperatureMax'].value).to.equal(50);
    expect(content['co2Max'].value).to.equal(1000);
    expect(content['humidityMax'].value).to.equal(70);
    expect(content['vocMax'].value).to.equal(99);
    expect(content['temperatureMin'].value).to.equal(10);
    expect(content['co2Min'].value).to.equal(10);
    expect(content['humidityMin'].value).to.equal(10);
    expect(content['vocMin'].value).to.equal(98);
    expect(content['temperatureAverage'].value).to.equal(19.7);
    expect(content['co2Average'].value).to.equal(600);
    expect(content['humidityAverage'].value).to.equal(50);
    expect(content['vocAverage'].value).to.equal(51);
  });
});
