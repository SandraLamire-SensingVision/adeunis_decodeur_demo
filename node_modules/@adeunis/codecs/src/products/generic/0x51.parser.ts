namespace codec {
  /**
   * Smart digital input 1 alarm frame parser
   */
  export class Generic0x51Parser implements FrameParser {
    readonly deviceType = 'motion|comfort|comfort2|comfortCo2|deltap|breath|comfortSerenity';
    readonly frameCode = 0x51;

    public parseFrame(payload: Buffer, configuration: Buffer, network: Network) {
      const appContent: Content = { type: '0x51 digital input 1 alarm' };
      if (payload[1] & 0x04) {
        // retrieval of the frame date timestamp value,
        // then conversion to epoch 2013 (+1356998400), then in second
        const myDate = new Date((payload.readUInt32BE(9) + 1356998400) * 1000);
        // As we do not know if timestamp is locale or UTC , do remove 'UTC' indication
        appContent['timestamp'] = myDate.toJSON().replace('Z', '');
      }
      appContent['state'] = {
        previousFrame: Boolean((payload.readUInt8(2) >> 1) & 1),
        current: Boolean((payload.readUInt8(2) >> 0) & 1),
      };
      appContent['counter'] = {
        global: payload.readUInt32BE(3),
        instantaneous: payload.readUInt16BE(7),
      };

      return appContent;
    }
  }
}
