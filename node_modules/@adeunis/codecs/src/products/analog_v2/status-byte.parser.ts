namespace codec {
  /**
   * Analog status byte parser
   */
  export class Analog2StatusByteParser implements FrameParser {
    readonly deviceType = 'analog2';
    readonly frameCode = 0;

    public parseFrame(payload: Buffer, configuration: Buffer, network: Network) {
      let statusContent: Content = {};

      const parser = new GenericStatusByteParser();
      statusContent = parser.parseFrame(payload, configuration);

      // frame 0x30 and 0x42 are sent only if backwards compatibility is active. In that case, handle status flag as for analog V1
      if (payload[0] == 0x30 || payload[0] == 0x42) {
        statusContent['alarmChannelA'] = Boolean(payload[1] & 0x08);
        statusContent['alarmChannelB'] = Boolean(payload[1] & 0x10);
      } else {
        statusContent['configurationInconsistency'] = Boolean(payload[1] & 0x08);
        statusContent['timestamp'] = Boolean(payload[1] & 0x04);
      }

      return { status: statusContent };
    }
  }
}
