namespace codec {
  /**
   * Generic 0x20 (configuration) frame parser
   */
  export class PulseV4NbIot0x20Parser implements FrameParser {
    readonly deviceType = 'pulse4nbiot';
    readonly frameCode = 0x20;

    // Offset to add in order to jump NB-Iot additional header
    readonly hOffset = 13;

    public parseFrame(payload: Buffer, configuration: Buffer, network: Network) {
      const appContent: Content = { type: '0x20 Pulse 4 NB-IoT Configuration' };

      appContent['remoteServerIpAddress'] = this.payloadToString(payload, this.hOffset + 2, this.hOffset + 2 + 30);
      appContent['remoteServerPort'] = payload.readUInt16BE(this.hOffset + 33);
      appContent['localPort'] = payload.readUInt16BE(this.hOffset + 35);
      appContent['apn'] = this.payloadToString(payload, this.hOffset + 37, this.hOffset + 37 + 30);

      return appContent;
    }

    private payloadToString(payload: Buffer, start: number, end: number) {
      const charCode: number[] = [];
      for (let i = start; i < end; i++) {
        if (payload[i] !== 0x00) {
          charCode.push(payload[i]);
        }
      }

      return String.fromCharCode(...charCode);
    }
  }
}
