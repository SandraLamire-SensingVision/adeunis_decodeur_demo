/// <reference path='0x20.parser.ts' />

import { expect } from 'chai';
import 'mocha';

describe('PulseV4NbIot0x20Parser', () => {
  let parser: codec.PulseV4NbIot0x20Parser;

  beforeEach(() => {
    parser = new codec.PulseV4NbIot0x20Parser();
  });

  it('should parse 0x20 frame', () => {
    const payloadString =
      '11223344556677880300000001202034362E3231382E37352E33330000000000000000000000' +
      '000000000000000026A02328696F74696E7465726E65740000000000000000000000000000000000000000';
    const content = parser.parseFrame(Buffer.from(payloadString, 'hex'), Buffer.from(''), 'unknown');
    expect(content.type).to.equal('0x20 Pulse 4 NB-IoT Configuration');
    expect(content['remoteServerIpAddress']).to.equal('46.218.75.33');
    expect(content['remoteServerPort']).to.equal(9888);
    expect(content['localPort']).to.equal(9000);
    expect(content['apn']).to.equal('iotinternet');
  });
});
