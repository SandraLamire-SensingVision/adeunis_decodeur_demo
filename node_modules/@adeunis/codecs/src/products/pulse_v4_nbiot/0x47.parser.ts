namespace codec {
  /**
   * Pulse 4 0x47 (alarm) frame parser
   */
  export class PulseV4NbIot0x47Parser implements FrameParser {
    readonly deviceType = 'pulse4nbiot';
    readonly frameCode = 0x47;

    // Offset to add in order to jump NB-Iot additional header
    readonly hOffset = 13;

    public parseFrame(payload: Buffer, configuration: Buffer, network: Network) {
      const appContent: Content = { type: '0x47 Pulse 4 NB-IoT alarm' };
      if (payload[this.hOffset + 1] & 0x04) {
        // retrieval of the frame date timestamp value, then conversion to epoch 2013 (+1356998400), then in second
        const myDate = new Date((payload.readUInt32BE(this.hOffset + 6) + 1356998400) * 1000);
        // As we do not know if timestamp is locale or UTC , do remove 'UTC' indication
        appContent['timestamp'] = myDate.toJSON().replace('Z', '');
      }
      appContent['decodingInfo'] = 'flowValues: [Channel A, Channel B]';
      // Flows when overflow occured [Channel A, Channel B]
      appContent['flowValues'] = [payload.readUInt16BE(this.hOffset + 2), payload.readUInt16BE(this.hOffset + 4)];

      return appContent;
    }
  }
}
