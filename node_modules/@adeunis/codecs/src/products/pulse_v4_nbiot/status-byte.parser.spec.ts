/// <reference path='status-byte.parser.ts' />

import { expect } from 'chai';
import 'mocha';

describe('PulseV4NbIotStatusByteParser', () => {
  let parser: codec.PulseV4NbIotStatusByteParser;

  beforeEach(() => {
    parser = new codec.PulseV4NbIotStatusByteParser();
  });

  it('should parse status byte and NB-IoT header', () => {
    const payloadString = '11223344556677880300000020109201000111003C22003C0000000000000000000000000203020300';
    const content = parser.parseFrame(Buffer.from(payloadString, 'hex'), Buffer.from(''), 'unknown');

    expect(content['nbIot']['imei']).to.equal('1122334455667788', JSON.stringify(content));
    expect(content['nbIot']['signalQuality']).to.equal(3);
    expect(content['nbIot']['globalFrameCounter']).to.equal(32);
    expect(content['status']['frameCounter']).to.equal(4);
    expect(content['status']['lowBattery']).to.equal(true);
    expect(content['status']['configurationDone']).to.equal(false);
  });
});
