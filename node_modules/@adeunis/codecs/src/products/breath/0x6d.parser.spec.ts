/// <reference path='0x6d.parser.ts' />

import { expect } from 'chai';
import 'mocha';

describe('breath0x6dParser', () => {
  let breath0x6dParser: codec.Breath0x6dParser;

  beforeEach(() => {
    breath0x6dParser = new codec.Breath0x6dParser();
  });

  it('should parse data frame 6D8001B3003E001E001401B3003E001E0014', () => {
    const payloadString = '6D8001B3003E001E001401B3003E001E0014';
    const content = breath0x6dParser.parseFrame(Buffer.from(payloadString, 'hex'), Buffer.from(''), 'unknown');
    expect(content.type).to.equal('0x6d Breath periodic data');

    expect(content['tvoc'].values[0]).to.equal(435);
    expect(content['pm10'].values[0]).to.equal(62);
    expect(content['pm25'].values[0]).to.equal(30);
    expect(content['pm1'].values[0]).to.equal(20);
    expect(content['tvoc'].values[1]).to.equal(435);
    expect(content['pm10'].values[1]).to.equal(62);
    expect(content['pm25'].values[1]).to.equal(30);
    expect(content['pm1'].values[1]).to.equal(20);
  });
});
