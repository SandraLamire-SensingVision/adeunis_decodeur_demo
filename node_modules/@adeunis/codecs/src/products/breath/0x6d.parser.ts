namespace codec {
  /**
   * Breath 0X6D (data) frame parser
   */
  export class Breath0x6dParser implements FrameParser {
    readonly deviceType = 'breath';
    readonly frameCode = 0x6d;

    public parseFrame(payload: Buffer, configuration: Buffer, network: Network) {
      const appContent: Content = { type: '0x6d Breath periodic data' };
      let rawValue;
      const pm10 = [],
        pm25 = [],
        pm1 = [],
        tvoc = [];
      const payloadLength = payload.length;

      // Loop through historic data [t=0, t-1, t-2,...]
      for (let offset = 2; offset < payloadLength; offset += 8) {
        rawValue = payload.readUInt16BE(offset);
        tvoc.push(rawValue);
        rawValue = payload.readUInt16BE(offset + 2);
        pm10.push(rawValue);
        rawValue = payload.readUInt16BE(offset + 4);
        pm25.push(rawValue);
        rawValue = payload.readUInt16BE(offset + 6);
        pm1.push(rawValue);
      }

      appContent['decodingInfo'] = 'values: [t=0, t-1, t-2, ...]';
      appContent['tvoc'] = { unit: 'µg/m3', values: tvoc };
      appContent['pm10'] = { unit: 'µg/m3', values: pm10 };
      appContent['pm25'] = { unit: 'µg/m3', values: pm25 };
      appContent['pm1'] = { unit: 'µg/m3', values: pm1 };

      return appContent;
    }
  }
}
