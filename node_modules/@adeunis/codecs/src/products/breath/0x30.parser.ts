namespace codec {
  /**
   * Breath 0x30 Keep alive / daily frame parser
   */
  export class Breath0x30Parser implements FrameParser {
    readonly deviceType = 'breath';
    readonly frameCode = 0x30;

    public parseFrame(payload: Buffer, configuration: Buffer, network: Network) {
      const appContent: Content = { type: '0x30 Daily frame' };
      if (payload.length >= 11) {
        appContent['tvoc'] = {
          min: { unit: 'µg/m3', value: payload.readUInt16BE(2) },
          max: { unit: 'µg/m3', value: payload.readUInt16BE(4) },
          average: { unit: 'µg/m3', value: payload.readUInt16BE(6) },
          duration: { unit: 'min', value: payload.readUInt16BE(8) },
        };
        appContent['pm10'] = {
          min: { unit: 'µg/m3', value: payload.readUInt16BE(10) },
          max: { unit: 'µg/m3', value: payload.readUInt16BE(12) },
          average: { unit: 'µg/m3', value: payload.readUInt16BE(14) },
          duration: { unit: 'min', value: payload.readUInt16BE(16) },
        };
        appContent['pm25'] = {
          min: { unit: 'µg/m3', value: payload.readUInt16BE(18) },
          max: { unit: 'µg/m3', value: payload.readUInt16BE(20) },
          average: { unit: 'µg/m3', value: payload.readUInt16BE(22) },
          duration: { unit: 'min', value: payload.readUInt16BE(24) },
        };
        appContent['pm1'] = {
          min: { unit: 'µg/m3', value: payload.readUInt16BE(26) },
          max: { unit: 'µg/m3', value: payload.readUInt16BE(28) },
          average: { unit: 'µg/m3', value: payload.readUInt16BE(30) },
        };
      } else {
        appContent['tvoc'] = { max: { unit: 'µg/m3', value: payload.readUInt16BE(2) } };
        appContent['pm10'] = { max: { unit: 'µg/m3', value: payload.readUInt16BE(4) } };
        appContent['pm25'] = { max: { unit: 'µg/m3', value: payload.readUInt16BE(6) } };
        appContent['pm1'] = { max: { unit: 'µg/m3', value: payload.readUInt16BE(8) } };
      }
      return appContent;
    }
  }
}
