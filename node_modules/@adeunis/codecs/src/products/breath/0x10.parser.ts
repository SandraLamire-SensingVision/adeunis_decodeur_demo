namespace codec {
  /**
   * Breath 0x10 (configuration) frame parser
   */
  export class Breath0x10Parser implements FrameParser {
    readonly deviceType = 'breath';
    readonly frameCode = 0x10;

    public parseFrame(payload: Buffer, configuration: Buffer, network: Network) {
      // register 300: Keep Alive frame TX 0: Disable or 1: Enable H24 frame
      // register 301: Issue period, value betwenn 0 and 65535, 0: disabling periodic transmission
      // register 320: value between 1 and 65535
      // register 321: value between 0 and 65535, 0: no scanning, X2s
      // register 323: value between 1 and 255 : Number of additional (redundant) samples per frame

      const appContent: Content = { type: '0x10 Breath configuration' };

      (appContent['dailyFrameActivated'] = Boolean(payload.readUInt8(2) === 0 ? false : true)),
        (appContent['numberOfHistorizationBeforeSending'] = payload.readUInt16BE(3)),
        (appContent['historyPeriod'] = { unit: 's', value: payload.readUInt16BE(5) }),
        (appContent['alarmRepeatActivated'] = Boolean(payload.readUInt8(7) === 0 ? false : true)),
        (appContent['alarmRepeatPeriod'] = { unit: 's', value: payload.readUInt16BE(8) }),
        (appContent['redundantSamples'] = payload.readUInt8(10));
      return appContent;
    }
  }
}
