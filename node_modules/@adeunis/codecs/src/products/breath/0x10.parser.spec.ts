/// <reference path='0x10.parser.ts' />

import { expect } from 'chai';
import 'mocha';

describe('breath0x10Parser', () => {
  let breath0x10Parser: codec.Breath0x10Parser;

  beforeEach(() => {
    breath0x10Parser = new codec.Breath0x10Parser();
  });

  it('should parse frame and return correct config', () => {
    const payloadString = '1000010001003C01025800';
    const content = breath0x10Parser.parseFrame(Buffer.from(payloadString, 'hex'), Buffer.from(''), 'unknown');
    expect(content.type).to.equal('0x10 Breath configuration');
    expect(content['dailyFrameActivated']).to.equal(true);
    expect(content['numberOfHistorizationBeforeSending']).to.equal(1);
    expect(content['historyPeriod'].value).to.equal(1 * 60);
    expect(content['alarmRepeatActivated']).to.equal(true);
    expect(content['alarmRepeatPeriod'].value).to.equal(10 * 60);
    expect(content['redundantSamples']).to.equal(0);
  });
});
